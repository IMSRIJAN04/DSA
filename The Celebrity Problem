//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*; 

class GFG{
    public static void main(String args[]) throws IOException { 
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t>0)
        {
            int N = sc.nextInt();
            int M[][] = new int[N][N];
            for(int i=0; i<N; i++)
            {
                for(int j=0; j<N; j++)
                {
                    M[i][j] = sc.nextInt();
                }
            }
            System.out.println(new Solution().celebrity(M,N));
            t--;
        }
    } 
} 
// } Driver Code Ends


//User function Template for Java


class Solution
{ 
    //Function to find if there is a celebrity in the party or not.
    int celebrity(int M[][], int n)
    {
    	// code here
    	int flag2 = 0;
    	Stack<Integer> s = new Stack<Integer>();
    	for(int k = n-1; k >=0; k--){
    	    s.push(k);
    	}
    	
    	while(s.size() != 1){
    	    int a = s.pop();
    	    int b = s.pop();
    	    if(knows(M,a,b)){
    	        s.push(b);
    	    }
    	    else{
    	         s.push(a);
    	    }
    	}
    	
    	int candidate = s.pop();
    	int zeroCount = 0;
    	int oneCount = 0;
    	
    	for(int i = 0; i<n; i++){
    	    if(M[candidate][i] == 0) zeroCount++;
    	}
    	
    	if(zeroCount != n) return -1;
    	
    	for(int i = 0; i < n; i++){
    	    if(M[i][candidate] == 1) oneCount++;
    	}
    	
    	if(oneCount != n-1) return -1;
    	
    	return candidate;
    }
    
    boolean knows(int[][]arr, int a , int b){
        if(arr[a][b] == 1) return true;
        return false;
    } 
}
