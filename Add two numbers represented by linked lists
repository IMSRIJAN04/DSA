class Solution{
    //Function to add two numbers represented by linked list.
    static Node addTwoLists(Node first, Node second){
        // code here
        // return head of sum list
        
        Node firstRev = reverse(first);
        Node secondRev = reverse(second);
        Node ans = firstRev;
        
        int sum = 0;
        int carry = 0;
        Node temp = firstRev;
        Node prev = null;
        while(firstRev != null && secondRev != null){
            sum = firstRev.data + secondRev.data + carry;
            carry = sum/10;
            temp.data = sum%10;
            firstRev = firstRev.next;
            secondRev = secondRev.next;
            prev = temp;
            temp = temp.next;
           
        }
        Node remain = firstRev == null? secondRev : firstRev;
        prev.next = remain;
        while(remain != null){
            sum =remain.data + carry;
            carry = sum/10;
            prev.next.data = sum%10;
            prev = prev.next;
            remain = remain.next;
        }
        if(carry > 0){
            prev.next = new Node(carry);
            prev = prev.next;
        }
       
        return reverse(ans);
    }
    
    static Node reverse(Node head){
        Node temp = head, prev = null;
        while(head != null){
            temp = head.next;
            head.next = prev;
            prev = head;
            head = temp;
        }
        return prev;
    }
}
