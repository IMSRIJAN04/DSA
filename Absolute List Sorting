class Solution
{
	Node sortList(Node head) {
		// Your code here
        if(head == null || head.next == null) return head;
       
        Node mid = getMid(head);
        Node left = head;
        Node right = mid.next;
        mid.next = null;
        
        left = sortList(left);
        right = sortList(right);
        
        return mergeList(left, right);
	}
	
	Node getMid(Node head){
	    if(head == null) return head;
	    Node slow = head, fast = head.next;
	    while(fast != null && fast.next != null){
	        slow = slow.next;
	        fast = fast.next.next;
	    }
	    return slow;
	}
	
	Node mergeList(Node left, Node right){
	    Node dummy = new Node(-1);
	    Node temp = dummy;
	    while(left != null && right != null){
	        if(left.data < right.data){
	            temp.next = left;
	            left = left.next;
	        }
	        else{
	            temp.next = right;
	            right = right.next;
	        }
	        temp = temp.next;
	    }
	    Node remain  = left == null ? right : left;
	    while(remain != null){
	        temp.next = remain;
	        remain = remain.next;
	        temp = temp.next;
	    }
	    return dummy.next;
	}
}
