class GfG
{
    Node flatten(Node root)
    {
	// Your code here
	    if(root == null || root.next == null){
	        return root;
	    }
        Node head1 = root; 
	    Node head2 = root.next;
	    boolean flag = false;
	    Node res = null;

	    while(head1 != null  && head2 != null){
	        Node nextRef = head2.next;
	        Node temp = sortedMerge(head1, head2);
	        if(flag == false){
	            res = temp;
	            flag = true;
	        }
	        head1 = temp;
	        head2 = nextRef;
	    }
	    
	    return res;
    }
    
    Node sortedMerge(Node head1, Node head2) {
     Node temp = new Node(-1);
     Node head = temp;
     
     while(head1 != null && head2 != null){
         if(head1.data < head2.data){
             temp.bottom = head1;
             temp = temp.bottom;
             head1 = head1.bottom;
         }
         else{
            //  System.out.println("hi");
             temp.bottom = head2;
             temp = temp.bottom;
             head2 = head2.bottom;
         }
     }
     Node ref = head1 == null? head2 : head1;
     while(ref != null){
        //  System.out.println(ref.data);
         temp.bottom = ref;
         ref = ref.bottom;
         temp = temp.bottom;
     }
     return head.bottom;
   } 
}
