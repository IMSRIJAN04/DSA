int intersectPoint(Node head1, Node head2)
	{
         // code here
         Node temp1 = head1;
         Node temp2 = head2;
         int len1 = 0, len2 = 0;
         
         while(temp1 != null){
             temp1 = temp1.next;
             len1++;
         }
         while(temp2 != null){
             temp2 = temp2.next;
             len2++;
         }
         
         if(len1 > len2){
             int diff = len1 - len2;
             while(diff > 0){
                 head1 = head1.next;
                 diff--;
             }
             while(head1.next!=null){
                 if(head1.next == head2.next){
                     return head1.next.data;
                 }
                 head1 = head1.next;
                 head2 = head2.next;
             }
         }
         else{
             int diff = len2 - len1;
             while(diff > 0){
                 head2 = head2.next;
                 diff--;
             }
             while(head2.next!=null){
                 if(head1.next == head2.next){
                     return head2.next.data;
                 }
                 head1 = head1.next;
                 head2 = head2.next;
             }
         }
        //  System.out.println(hs);
         return -1;
	}

//Bruteforce with extra space
int intersectPoint(Node head1, Node head2)
	{
         // code here
         HashSet<Node> hs = new HashSet<>();
         Node temp1 = new Node(-1);
         temp1.next = head1;
         Node temp2 = new Node(-1);
         temp2.next = head2;
         while(temp1 != null && temp2 != null){
             if(hs.contains(temp1.next)){
                 return temp1.next.data;
             }
             if(hs.contains(temp2.next)){
                 return temp2.next.data;
             }
             
             if(temp1.next != null) hs.add(temp1.next);
             if(temp2.next != null) hs.add(temp2.next);
             temp1 = temp1.next;
             temp2 = temp2.next;
         }
         Node temp = temp1 == null? temp2 : temp1;
         while(temp.next != null){
             if(hs.contains(temp.next)){
                 return temp.next.data;
             }
             temp = temp.next;
         }
        //  System.out.println(hs);
         return -1;
	}
